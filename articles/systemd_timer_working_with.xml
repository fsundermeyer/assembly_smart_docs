<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE assembly
[
    <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to https://github.com/SUSE/doc-sle/blob/main/xml/systemd.xml -->
<assembly version="5.2" xml:lang="en"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:trans="http://docbook.org/ns/transclusion"
          xmlns="http://docbook.org/ns/docbook">
 <!-- R E S O U R C E S -->
 <resources>
   <!-- Concepts -->
   <resource href="../concepts/systemd-timer-concept.xml" xml:id="_systemd-timer-concept">
     <description>The systemd timer concept</description>
   </resource>
 </resources>
 <resources>
   <!-- References -->
   <resource href="../references/systemd_timer_manage.xml" xml:id="_systemd-timer-manage">
     <description>Managing systemd timers</description>
   </resource>
   <resource href="../references/systemd_timer_types.xml" xml:id="_systemd-timer-types">
     <description>The systemd timer types</description>
   </resource>
 </resources>
 <resources>
   <!-- Tasks -->
   <resource href="../tasks/systemd_timer_create.xml" xml:id="_systemd-create-timer">
     <description>Creating a systemd timer</description>
   </resource>
   <resource href="../tasks/systemd_timer_test_cal_entries.xml" xml:id="_systemd-timer-test">
     <description>systemd timer: Test calendar entries</description>
   </resource>
   <resource href="../tasks/systemd_timer_catching_up_missed_runs.xml" xml:id="_systemd-timer-catchup">
     <description>Catching up on missed runs</description>
   </resource>
   <resource href="../tasks/systemd_timer_mailto.xml" xml:id="_systemd-timer-mailto">
     <description>Creating a systemd timer</description>
   </resource>
   <resource href="../tasks/systemd_timer_user.xml" xml:id="_systemd-timer-user">
     <description>Using systemd timers as a regular user</description>
   </resource>
   <resource href="../tasks/systemd_timer_troubleshoot.xml" xml:id="_systemd-timer-troubleshoot">
     <description>Troubleshooting systemd timers</description>
   </resource>
 </resources>
 <resources>
   <!-- Miscellaneous -->
   <resource href="../common/legal.xml" xml:id="_legal">
     <description>Legal Notice</description>
   </resource>
   <resource href="../common/license_gfdl1.2.xml" xml:id="_gfdl">
     <description>GNU Free Documentation License</description>
   </resource>
 </resources>

 <structure>
   <output renderas="article" xml:id="systemd-timers"/>
   <merge>
     <title>Working with &systemd; timers</title>
     <subtitle/>
     <revhistory>
       <title>Changelog</title>
       <revision>
         <revnumber>1</revnumber>
         <date>2023-02-28</date>
         <revdescription>
           <para>Initial version</para>
         </revdescription>
       </revision>
     </revhistory>
     <!-- ISO date of last update as YYYY-MM-DD -->
     <meta name="updated" content="2023-02-28"/>
     <!-- enter the platform identifier or list of comma-separated list of identifiers -->
     <meta name="architecture" content="x86_64;zseries;power;aarch64"/>
     <!-- enter product name and version -->
     <meta name="productname">
       <productname version="ALP">&sles;</productname>
       <productname version="15-SP5">&sles;</productname>
       <productname version="15-SP4">&sles;</productname>
       <productname version="15-SP3">&sles;</productname>
       <productname version="15-SP2">&sles;</productname>
       <productname version="15-SP1">&sles;</productname>
       <productname version="15-GA">&sles;</productname>
     </meta>
     <!-- SEO and social media -->
     <meta name="title">Working with &systemd; timers</meta>
     <meta name="description">
       Learn how to set up, manage and operate systemd timers for scheduling tasks on Linux.
       Migrate to systemd timers as a modern replacement of cron.
     </meta>
     <meta name="social-descr">
       Learn how to set up, manage and operate systemd timers.
     </meta>
     <!-- suitable category, comma-separated list of categories -->
     <meta name="category" content="Systems Management"/>
     <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
       <dm:bugtracker>
         <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
         <dm:component>Non-product-specific 20documentation</dm:component>
         <dm:product>Smart Docs</dm:product>
         <dm:assignee>fs@suse.com</dm:assignee>
       </dm:bugtracker>
       <dm:editurl>https://github.com/SUSE/doc-modular/tree/main/articles/</dm:editurl>
       <dm:translation>no</dm:translation>
     </dm:docmanager>
     <abstract>
       <para>
         From running a backup script at regular intervals to starting a specific process as soon
         as the machine boots, there are plenty of tasks that require scheduling on a Linux
         system. cron has long been the go-to tool for all scheduling needs, but the switch to
         &systemd; introduced a modern way to schedule tasks: &systemd; timer units.
       </para>
       <variablelist>
         <varlistentry>
           <term>WHAT?</term>
           <listitem>
             <para>
               Learn how to set up, manage and operate systemd timers for scheduling tasks on
               Linux. Migrate to systemd timers as a modern replacement of cron.
             </para>
           </listitem>
         </varlistentry>
         <varlistentry>
           <term>WHY?</term>
           <listitem>
             <para>
               To give you a flexible mechanism for scheduling and managing jobs and services.
             </para>
           </listitem>
         </varlistentry>
         <varlistentry>
           <term>EFFORT?</term>
           <listitem>
             <para>
               It takes 10 minutes to create an example &systemd; timer. You will need
               up to 30 minutes to fully understand how &systemd; timers work.
             </para>
           </listitem>
         </varlistentry>
         <varlistentry>
           <term>GOAL!</term>
           <listitem>
             <para>
               Learn how to create systemd timers and understand how they work.
             </para>
           </listitem>
         </varlistentry>
       </variablelist>
       <bridgehead renderas="sect3">Requirements</bridgehead>
       <itemizedlist>
         <listitem><para>Basic understanding of &systemd;.</para></listitem>
         <listitem>
           <para>
             &rootuser; or sudo privileges. If you are planning to use &systemd; timers as a
             regular user, refer to <xref linkend="systemd-timer-user"/> first.
           </para>
         </listitem>
       </itemizedlist>
     </abstract>
   </merge>
   <module resourceref="_systemd-timer-concept">
     <output renderas="section"/>
   </module>
   <module resourceref="_systemd-create-timer">
     <merge>
       <title>Creating a timer</title>
     </merge>
   </module>
   <module resourceref="_systemd-timer-manage">
     <output renderas="section"/>
     <merge>
       <title>Managing timers</title>
     </merge>
   </module>
   <module resourceref="_systemd-timer-types">
     <output renderas="section"/>
     <merge>
       <title>Timer types</title>
     </merge>
   </module>
   <module resourceref="_systemd-timer-test">
     <output renderas="section"/>
     <merge>
       <title>Testing calendar entries</title>
     </merge>
   </module>
   <module resourceref="_systemd-timer-catchup">
     <output renderas="section"/>
     <merge>
       <title>Catching up on missed runs</title>
     </merge>
   </module>
   <module resourceref="_systemd-timer-mailto">
     <merge>
       <title>Getting notified by email if a timer fails</title>
     </merge>
   </module>
   <module resourceref="_systemd-timer-user">
     <output renderas="section"/>
     <merge>
       <title>Using timers as a regular user</title>
     </merge>
   </module>
   <module resourceref="_systemd-timer-troubleshoot">
     <merge>
       <title>Troubleshooting</title>
     </merge>
   </module>
   <module resourceref="_legal"/>
   <module resourceref="_gfdl">
     <output renderas="appendix"/>
   </module>
 </structure>
</assembly>
